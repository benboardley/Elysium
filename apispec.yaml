openapi: 3.0.0
info:
  title: Your API Title
  version: 1.0.0
paths:
  /music/song/<str:query>:
    get:
      summary: Search for songs
      operationId: searchSongs
      responses:
        '200':
          description: list found songs
          content:
            application/json:
              example: |
                [
                  {
                      "name": "Call Me Maybe",
                      "artist": "Carly Rae Jepsen",
                      "uri": "spotify:track:3TGRqZ0a2l1LRblBkJoaDx",
                      "thumbnail": "https://i.scdn.co/image/ab67616d0000b273a111f7769013f1731e9c697c"
                  },
                  {
                      "name": "Call Out My Name",
                      "artist": "The Weeknd",
                      "uri": "spotify:track:09mEdoA6zrmBPgTEN5qXmN",
                      "thumbnail": "https://i.scdn.co/image/ab67616d0000b2731f6a2a40bb692936879db730"
                  },
                  {
                      "name": "Call Your Mom",
                      "artist": "Noah Kahan",
                      "uri": "spotify:track:3yn01PcU95PTbiZ3xvop2j",
                      "thumbnail": "https://i.scdn.co/image/ab67616d0000b27365a472d8326d4571bf725422"
                  },
                  {
                      "name": "Calling My Phone",
                      "artist": "Lil Tjay",
                      "uri": "spotify:track:3J8EOeKLTLXORtWPpOU5bE",
                      "thumbnail": "https://i.scdn.co/image/ab67616d0000b2735af0305457ff290e06dcc4c2"
                  },
                  {
                      "name": "Call Your Mom (with Lizzy McAlpine)",
                      "artist": "Noah Kahan",
                      "uri": "spotify:track:3fKpSA5w8iqLe9sNdIDESW",
                      "thumbnail": "https://i.scdn.co/image/ab67616d0000b273f0b007441dc1a09cbbfd77f6"
                  }
                ]

  /social/posts/:
    get:
      summary: Retrieve all posts
      operationId: getPosts
      responses:
        '200':
          description: A list of posts
          content:
            application/json:
              example: |
                [
                  {
                      "id": 1,
                      "profile_username": "bboardle",
                      "profile": 2,
                      "parent_post": null,
                      "likes": [],
                      "creation_time": "2024-03-01 00:18:11",
                      "update_time": "2024-03-01T00:32:40.025771Z",
                      "caption": "Ben knows it can only if the cat dragged him around the block",
                      "title": "**Tommy Enters**",
                      "song_post": null
                  },
                  {
                      "id": 3,
                      "profile_username": "bboardle",
                      "profile": 2,
                      "parent_post": null,
                      "likes": [],
                      "creation_time": "2024-03-01 15:43:23",
                      "update_time": "2024-03-01T15:43:23.172298Z",
                      "caption": "Greater than the art piece fr",
                      "title": "I really like this song",
                      "song_post": {
                          "id": 2,
                          "name": "Mona Lisa (feat. Kendrick Lamar)",
                          "artist": "Lil Wayne",
                          "artist_features": [
                              "Kendrick Lamar"
                          ],
                          "origin": "spotify",
                          "uri": "spotify:track:1B4IEIe1C21C5s1JFbRRWZ",
                          "audio_features": {
                              "danceability": 0.856,
                              "energy": 0.694,
                              "key": 2,
                              "loudness": -4.393,
                              "mode": 1,
                              "speechiness": 0.169,
                              "acousticness": 0.371,
                              "instrumentalness": 0,
                              "liveness": 0.109,
                              "valence": 0.489,
                              "tempo": 122.08,
                              "type": "audio_features",
                              "id": "1B4IEIe1C21C5s1JFbRRWZ",
                              "uri": "spotify:track:1B4IEIe1C21C5s1JFbRRWZ",
                              "track_href": "https://api.spotify.com/v1/tracks/1B4IEIe1C21C5s1JFbRRWZ",
                              "analysis_url": "https://api.spotify.com/v1/audio-analysis/1B4IEIe1C21C5s1JFbRRWZ",
                              "duration_ms": 324189,
                              "time_signature": 4
                          },
                          "other_available_platforms": [],
                          "song_clip_location": null,
                          "song_thumbnail_location": "https://i.scdn.co/image/ab67616d0000b273d9cc4a9ece3df3ad0b6cdcdc",
                          "album": null
                      }
                  }
                ]
    post:
      summary: Create a new post
      operationId: createPost
      requestBody:
        required: true
        content:
          application/json:
            example: |
              [
                {
                  "title": "New Post",
                  "content": "Content of the new post"
                },
                {
                  "title": "song post",
                  "content": "add uri field",
                  "song_uri": "spotify:track:3TGRqZ0a2l1LRblBkJoaDx"
                }
              ]
      responses:
        '201':
          description: The created post
          content:
            application/json:
              example: |
                {
                  "id": 3,
                  "title": "New Post",
                  "content": "Content of the new post",
                  "creation_time": "2022-02-15T13:00:00Z"
                }
                
  /social/posts/{id}:

    get:
      summary: Update a post by ID
      operationId: getPostById
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the post
          schema:
            type: integer
      responses:
        '200':
          description: Response body
          content:
            application/json:
              example: |
                  {
                      "id": 1,
                      "profile_username": "bboardle",
                      "profile": 2,
                      "parent_post": null,
                      "likes": [],
                      "creation_time": "2024-03-01 00:18:11",
                      "update_time": "2024-03-01T00:32:40.025771Z",
                      "caption": "Ben knows it can only if the cat dragged him around the block",
                      "title": "**Tommy Enters**",
                      "song_post": null
                  }
        '404':
          description: Post not found


    put:
      summary: Update a post by ID
      operationId: updatePostById
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the post
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example: |
              {
                "title": "Updated Post",
                "content": "Updated content of the post"
              }
      responses:
        '202':
          description: The post has been updated successfully
        '400':
          description: Invalid request data
  /social/posts/follow/:
    get:
      summary: Retrieve the follow feed
      operationId: getFollowFeed
      responses:
        '200':
          description: A list of posts in the follow feed
          content:
            application/json:
              example: |
                [
                  {
                    "id": 1,
                    "title": "Post in Follow Feed",
                    "content": "Content of Post in Follow Feed",
                    "creation_time": "2022-02-15T13:30:00Z"
                  },
                  {
                    "id": 2,
                    "title": "Another Post in Follow Feed",
                    "content": "Content of Another Post in Follow Feed",
                    "creation_time": "2022-02-15T14:00:00Z"
                  }
                ]
  /user/register/:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            example: |
              {
                "username": "newuser",
                "email": "newuser@example.com",
                "password": "password123",
                "first_name": "John",
                "last_name": "Doe"
              }
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              example: |
                {
                  "message": "User registered successfully",
                  "user_id": 4,
                  "username": "newuser"
                }
        '400':
          description: Invalid request data
  /user/login/:
    post:
      summary: User login
      operationId: userLogin
      requestBody:
        required: true
        content:
          application/json:
            example: |
              {
                "username": "existinguser",
                "password": "password123"
              }
      responses:
        '200':
          description: User login successful
          content:
            application/json:
              example: |
                {
                  "token": "xyz123"
                }
        '401':
          description: Invalid credentials
  /user/follow/:
    get:
      summary: Retrieve users being followed
      operationId: getFollowing
      responses:
        '200':
          description: A list of users being followed
          content:
            application/json:
              example: |
                [

                    {
                        "id": 2,
                        "user": 2,
                        "username": "bboardle",
                        "posts": [
                            1,
                            3
                        ],
                        "creation_time": "2024-02-29T20:55:04.116411Z",
                        "bio": "",
                        "location": "",
                        "update_time": "2024-02-29T20:55:04.131169Z",
                        "follow": [
                            2
                        ]
                    },
                    {
                        "id": 3,
                        "user": 3,
                        "username": "gwp",
                        "posts": [
                            2,
                            4
                        ],
                        "creation_time": "2024-02-29T20:55:04.116411Z",
                        "bio": "",
                        "location": "",
                        "update_time": "2024-02-29T20:55:04.131169Z",
                        "follow": [
                            3
                        ]
                    }
                ]
        
    post:
      summary: follow new user
      operationId: postFollowing
      requestBody:
        required: true
        content:
          application/json:
            example: |
              {
                "id": 2
              }
      responses:
        '202':
          description: User registered successfully
          content:
            application/json:
              example: |
                {"message":"followed"}
        '404':
          description: User not found
          
  /user/profile/{id}:
    get:
      summary: Retrieve user profile by ID
      operationId: getUserProfile
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user profile
          schema:
            type: integer
      responses:
        '200':
          description: The requested user profile
          content:
            application/json:
              example: |
                {
                    "id": 2,
                    "user": 2,
                    "username": "bboardle",
                    "posts": [
                        1,
                        3
                    ],
                    "creation_time": "2024-02-29T20:55:04.116411Z",
                    "bio": "",
                    "location": "",
                    "update_time": "2024-02-29T20:55:04.131169Z",
                    "follow": [
                        2
                    ]
                }
    put:
      summary: Update user profile by ID
      operationId: updateUserProfile
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user profile
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            example: |
              {
                "bio": "Updated user bio",
                "location": "Updated user location"
              }
      responses:
        '202':
          description: User profile has been updated successfully
        '400':
          description: Invalid request data
    delete:
      summary: Delete user profile by ID
      operationId: deleteUserProfile
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the user profile
          schema:
            type: integer
      responses:
        '202':
          description: User profile has been deleted successfully
          
  /user/search/{username_substring}:
    get:
      summary: Retrieve user profile by string
      operationId: searchUser
      parameters:
        - name: username_substring
          in: path
          required: true
          description: Substring of username
          schema:
            type: string
      responses:
        '200':
          description: The potential user profiles
          content:
            application/json:
              example: |
                [
                    {
                        "id": 2,
                        "user": 2,
                        "username": "gare",
                        "posts": [],
                        "creation_time": "2024-02-25T23:02:42.680017Z",
                        "bio": "",
                        "location": "",
                        "update_time": "2024-02-25T23:02:42.693524Z",
                        "follow": [
                            2
                        ]
                    },
                    {
                        "id": 1,
                        "user": 1,
                        "username": "gwp",
                        "posts": [
                            5
                        ],
                        "creation_time": "2024-02-25T22:55:46.315461Z",
                        "bio": "",
                        "location": "",
                        "update_time": "2024-02-25T22:55:46.331060Z",
                        "follow": [
                            1
                        ]
                    }
                ]
        '404':
          description: No matching profiles
          content:
            application/json:
              example: |
                {"message": "No Profiles Found"}
